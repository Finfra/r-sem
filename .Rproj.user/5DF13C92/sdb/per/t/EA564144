{
    "collab_server" : "",
    "contents" : "# This is the user-interface definition of a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\nlibrary(markdown)\nlibrary(shinythemes)\n#require(shinyjs)\nrequire(rhandsontable)\nrequire(shinyBS)\n\nsource(\"textInput2.R\")\n\nshinyUI(fluidPage(\n    shinyjs::useShinyjs(),\n    tags$head(\n        tags$style(HTML(\"\n      .shiny-output-error-validation {\n        color: green;\n      }\n    \"))\n    ),\n    div(id=\"Title1\",h1(\"Structural Equation Modeling with R\")),\n    hr(),\n    div(id=\"introduction\",\"With this app, you can perform `structural equation modeling`. Please wait a minute ! This message is disappeared WHEN READY ! \"),\n    hr(),\n    radioButtons('language','Select Language',\n                 choices=c('English' = 'en', '한국어(Korean)' = 'kor'),\n                 selected = 'en',inline=TRUE),\n    singleton(\n        tags$head(tags$script(src = \"message-handler.js\"))\n    ),\n    \n        navbarPage( \"R-sem.com\",\n            tabPanel(\"SEM\",\n                    \n                     fluidPage(\n                         \n                         fluidRow(\n                             column(4,htmlOutput(\"selectData\"),\n                                    \n                                    wellPanel(\n                                 fileInput(\"file\", label = \"upload data(*.xlsx or *.csv)\"),\n                                 radioButtons(\"Example\", label = \"Select Data\",\n                                              choices = c(\"HolzingerSwineford1939\",\n                                                          \"PoliticalDemocracy\",\n                                                          \"example1\",\n                                                          \"example2\",\n                                                          \"ADHD\",\n                                                             \"uploaded_file\"),\n                                              selected = \"HolzingerSwineford1939\"),\n                                 selectInput(\"SelectEx\",label=\"Select Example\",\n                                             choices=c(\"None\"=0,\"Confirmatory Factor Analysis\"=1,\n                                               \"Structural Equation Model\"=2,\"Cross-Validation Analysis\"=3,\n                                               \"Mediation Effect Analysis\"=4,\n                                               \"ADHD data\"=6),\n                                             selected=0),\n                           \n                                 actionButton(\"ResetEx\",\"Reset\")\n                             )),\n                             column(8, htmlOutput(\"dataTable\"),\n                                    \n                                 #tableOutput('table2')\n                                 rHandsontableOutput('hot',height=350),\n                             \n                                 hr(),\n                                 downloadButton('exportCSV','Export to CSV')\n                                        \n                             )\n                         ),\n                         a(id = \"toggleHelpData\", \"Help for Data show/hide\"),\n                         shinyjs::hidden(\n                           div(id=\"helpData\",\n                               uiOutput(\"dataHelp\")      \n                           )),\n                         hr(),\n                         fluidRow(\n                           htmlOutput(\"EditSE\")),\n                         fluidRow(\n                           column(6,verbatimTextOutput(\"EquationText\"))\n                         ),        \n                         fluidRow(\n                             \n                             column(2,\n                                    selectInput(\"leftvar\",\"leftvar\",\"\",multiple=TRUE,selectize=TRUE),\n                                    textInput(\"lefttext\",\"Latent Variable\",value=\"\")),\n                             column(2, wellPanel(radioButtons(\"operator\",\"operator\",\n                                                    choices=c(\"=~\",\"~\",\"~~\",\":=\",\"==\",\"<\",\">\"),\n                                                    selected=\"=~\"),\n                                                 a(id = \"toggleHelpOp\", \"?Operator\")\n                                                 )),\n                             column(2,selectInput(\"rightvar\",\"rightvar\",\"\",multiple=TRUE,selectize=TRUE)),\n                             column(2,\n                                    actionButton(\"add\",\"add to equation\"),\n                                    hr(),\n                                    actionButton(\"reset\",\"reset the equation\")),\n                             column(4,\n                                    textareaInput(\"equation\",\"equation\",rows=8,width=300),\n                                    a(id = \"toggle2ndEquation\", \"The 2nd Equation\"),\n                                    shinyjs::hidden(\n                                       div(id=\"2ndEquation\",\n                                           textareaInput(\"equation2\",\"2nd equation\",rows=8,width=300),\n                                           checkboxInput(\"compareModels\",\"Compare Models\",value=TRUE)\n                                           ))\n                                    )         \n                         ),\n                         shinyjs::hidden(\n                           div(id=\"helpOperator\",\n                               uiOutput(\"operatorHelp\")\n                           )),\n                         fluidRow(\n                             checkboxInput(\"moderating\",\"Mediation Effect Analysis\"),\n                             conditionalPanel(condition=\"input.moderating== true\",\n                                              column(4,wellPanel(\n                                                  \n                                                  selectInput(\"indepvar\",\"independent variable\",c(\"\"),selected=\"\",selectize=TRUE),\n                                                  selectInput(\"mediator\",\"mediator\",c(\"\"),selected=\"\",selectize=TRUE),\n                                                  selectInput(\"resvar\",\"response variable\",c(\"\"),selected=\"\",selectize=TRUE),\n                                                  checkboxInput(\"showcor\",\"show correlation\",value=TRUE),\n                                                  checkboxInput(\"sobel\",\"perform sobel test\",value=TRUE),\n                                                  actionButton(\"MakeEquation\",\"Make Equation\")\n                                              )))\n                         ),\n                         fluidRow(\n                           htmlOutput(\"analysisOption\"),\n                           column(4,wellPanel(radioButtons(\"method\",\"Anlaysis options\",\n                                                           choices=c(\"fit a Structural Equation Model\"=\"sem\",\n                                                                     \"fit a Confirmatory Factor Analysis Models\"=\"cfa\",\n                                                                     \"fit a Growth Curve Model\"=\"growth\",\n                                                                     \"fit a Partial Least Squares Model\"=\"matrixpls\"),\n                                                           selected=\"sem\"),\n                                              div(id=\"editOrder\",\"Manual command line spec\"),\n                                              checkboxInput(\"editAnalysis\",\"Manual command line specification\",value=FALSE))),\n                           column(4,wellPanel(\n                                              selectInput(\"group\",\"group\",c(\"\"),selected=\"\"),\n                                              selectInput(\"group.equal\",\"group.equal\",\n                                                          c(\"loadings\",\"intercepts\",\"means\",\"thresholds\",\"regressions\",\"residuals\",\n                                                            \"residual.covariances\",\"lv.variances\",\"lv.covariances\"),multiple=TRUE,selected=\"\"),\n                                              selectInput(\"se\",\"se\",c(\"default\",\"standard\",\"first.order\",\"robust\",\"robust.sem\",\n                                                                      \"robust.huber.white\",\"bootstrap\")),\n                                              selectInput(\"missing\",\"missing\",c(\"default\",\"listwise\",\"direct\",\"ml\",\"fiml\")),\n                                              selectInput(\"estimator\",\"estimator\",c(\"default\",\"ML\",\"GLS\",\"WLS\",\"ULS\",\"DWLS\")))),\n                           column(4,wellPanel(div(id=\"summaryOptions\",\"Summary Option\"),\n                                              checkboxInput(\"standardized\",\"standardized\",value = TRUE),\n                                              checkboxInput(\"fit.measures\",\"fit.measures\",value = FALSE),\n                                              checkboxInput(\"rsquare\",\"rsquare\",value = FALSE),\n                                              checkboxInput(\"modindices\",\"modindices\",value = FALSE),\n                                              div(id=\"otherOptions\",\"Others\"),\n                                              checkboxInput(\"showcoef\",\"show coefficient\",value = FALSE),\n                                              checkboxInput(\"showMeaInv\",\"show Measurement Invariance\",value = FALSE)\n                                              ))\n                           \n                         ),\n                         fluidRow(\n                           conditionalPanel(condition=\"input.editAnalysis== true\",\n                                    wellPanel(\n                                    div(id=\"order1\",\"Edit the Analysis Order\"),  \n                                    textareaInput(\"AnalysisOrder\",\"Analysis Order\",rows=2,width=800),\n                                    \n                                    conditionalPanel(condition=\"input.equation2!= ''\",\n                                                     div(id=\"order2\",\"Edit the Analysis Order - The 2nd Equation\"),\n                                                     textareaInput(\"AnalysisOrder2\",\"Analysis Order2\",rows=2,width=800)))\n                                    )\n                         ),\n                         #h3(\"Plot Options - semPaths()\"),\n                         fluidRow(\n                           htmlOutput(\"plotOption\"),\n                              \n\n                              column(12,a(id = \"toggleFinalPlot\", h4(\"Plot Options show/hide\")),\n                                     shinyjs::hidden(\n                                       div(id=\"finalPlot\",\n                              column(3, wellPanel(selectInput(\"what\",\"what\",c(\"path\",\"est\",\"std\",\"eq\",\"col\"),\n                                          multiple=TRUE,selectize=TRUE,selected=\"path\"),\n                              selectInput(\"whatLabels\",\"whatLabels\",c(\"label\",\"est\",\"std\",\"eq\",\"hide\"),\n                                          multiple=TRUE,selectize=TRUE,selected=\"std\"),\n                              selectInput(\"style\",\"style\",c(\"ram\",\"mx\",\"OpenMx\",\"lisrel\"),\n                                          selected=\"ram\"),\n                              selectInput(\"layout\",\"layout\",c(\"tree\",\"circle\",\"spring\",\"tree2\",\"circle2\"),\n                                          selected=\"tree\"))),\n                              column(3,wellPanel(\n                                checkboxInput(\"intercept\",\"intercept\",value=FALSE),\n                                checkboxInput(\"residuals\",\"residuals\",value=FALSE),\n                                checkboxInput(\"thresholds\",\"thresholds\",value=FALSE),\n                                checkboxInput(\"pastel\",\"pastel\",value=TRUE),\n                                checkboxInput(\"curvePivot\",\"curvePivot\",value=FALSE)\n                              )),\n                              column(6,wellPanel(\n                                numericInput3(\"nCharNodes\",\"nCharNodes\",value=0,width=120),\n                                numericInput3(\"nCharEdges\",\"nCharEdges\",value=0,width=120),\n                                selectInput3(\"rotation\",\"rotation\",1:4,selected=1,width=120),\n                                selectInput3(\"groups\",\"groups\",c(\"\",\"manifests\",\"latents\",\"manlat\"),selected=\"manlat\",width=120),\n                                textInput(\"Other\",\"Other Options\",value=\"\")\n                              ))\n                            \n                              )))),\n                         checkboxInput(\"preview\",\"Plot Preview\",value = FALSE),\n                         uiOutput('Model.ui'),\n                         hr(),\n                         fluidRow(\n                           htmlOutput(\"inspect\"),\n                           p(\"You can inspect or extract information from a fitted lavaan object. Please select what needs to be inspect/extracted.\"),\n                           column(4,wellPanel(\n                             selectInput(\"matrices\",\"Model matrices\",choices=c(\"none\",\"free\",\"partable\",\"se\",\"start\",\"est\",\"dx.free\",\"dx.all\",\n                                                                             \"std\",\"std.lv\",\"std.nox\")),\n                           selectInput(\"data\",\"data\",c(\"none\",\"data\",\"group\",\"ngroups\",\"group.label\",\"nobs\",\n                                                       \"norig\",\"ntotal\",\"case.idx\",\"empty.idx\",\"patterns\",\n                                                       \"coverage\")),\n                           selectInput(\"stats\",\"observed sample statistics\",c(\"none\",\"sampstat\",\"sampstat.h1\",\"wls.obs\",\"wls.v\",\"gamma\"))\n                           )),\n                           column(4,wellPanel(\n                           selectInput(\"features\",\"model features\",c(\"none\",\"meanstructure\",\"categorical\",\"fixed.x\",\"parameterization\")),\n                           selectInput(\"samplestats\",\"model-implied sample statistics\",\n                                       c(\"none\",\"cov.lv\",\"cor.lv\",\"mean.lv\",\"cov.ov\",\"cor.ov\",\"mean.ov\",\n                                         \"cov.all\",\"cor.all\",\"th\",\"wls.est\",\"vy\",\"rsquare\")),\n                           selectInput(\"optimizer\",\"optimizer information\",\n                                       c(\"none\",\"converged\",\"iterations\",\"optim\"))\n                           )),\n                           column(4,wellPanel(\n                           selectInput(\"infmatrices\",\"Gradient, Hessian, observed, expected and first.order information matrices\",\n                                       c(\"none\",\"gradient\",\"hessian\",\"information\",\"information.expected\",\"information.observed\",\n                                         \"information.first.order\",\"augumented.information\",\"augmented.information.expected\",\"augmented.information.observed\",\n                                         \"augmented.information.first.order\",\"inverted.information\",\"inverted.information.expected\",\"inverted.information.observed\",\n                                         \"inverted.information.first.order\")),\n                           selectInput(\"varcovpar\",\"Variance covariance matrix of the model parameters\",\n                                       c(\"none\",\"vcov\",\"vcov.std.all\",\"vcov.std.lv\",\n                                         \"vcov.std.nox\")),\n                           selectInput(\"misc\",\"miscellaneous\",\n                                       c(\"none\",\"UGamma\",\"list\",\"fit\",\"mi\",\"options\",\"call\",\n                                         \"timing\",\"test\",\"post.check\"))\n                           )),\n                           column(3,actionButton(\"inspect\",\"Inspect/extract inf\")),\n                           column(3,actionButton(\"resetinspect\",\"Reset inspect\"))\n                           \n                           \n                         ),\n                         hr(),\n                         uiOutput(\"inspect.ui\"),\n                         hr(),\n                         fluidRow(\n                               column(3,actionButton(\"doSEM\",\"Do Analysis\")\n                               ),\n                               column(3,\n                                      downloadButton(\"semReport\",\"download Report\"),\n                                      radioButtons('format', 'Report Format As', c('PDF', 'Word','HTML'),\n                                                   inline = TRUE,selected='HTML')\n                               ),\n                               column(3,downloadButton(\"downloadPlot\",\"download Plot(s)\"),\n                                      radioButtons('plotformat', 'Format As', c('png', 'svg','pdf'),\n                                                   inline = TRUE,selected='png'),\n                                      numericInput3(\"plotWidth\",\"width\",value=7,step=0.1,width=50),\n                                      numericInput3(\"plotHeight\",\"height\",value=5,step=0.1,width=50)\n                                     \n                               ),\n                               column(3,downloadButton(\"downloadPPT\",\"download pptx\"),\n                                radioButtons('pptformat', 'Format', c('wide', 'normal'),\n                                                   inline = TRUE,selected='normal'),\n                                checkboxInput('pptvector','as vector graphic',value=FALSE)\n                                #,radioButtons('pptfigformat', 'Figure As', c('emf', 'png'),\n                                #                   inline = TRUE,selected='emf')\n                               )\n                               \n                             ),\n                             hr(),   \n                         \n                         uiOutput(\"sem.ui1\")\n                         )),\n            navbarMenu(\"How to\",\n                 tabPanel(\"Getting Started\",uiOutput(\"Howto1\")),\n                 tabPanel(\"Analyze Your Own Data\",uiOutput(\"Howto2\")),\n                 tabPanel(\"Edit A Structural Equation\",uiOutput(\"Howto3\")),\n                 tabPanel(\"Insert A Mediation Effect Equation\",uiOutput(\"Howto4\")),\n                 tabPanel(\"A Complete Example\",uiOutput(\"Howto5\")),\n                 tabPanel(\"Customize Your Plot\",uiOutput(\"Howto6\")),\n                 tabPanel(\"Multiple Groups\",uiOutput(\"Howto7\")),\n                 tabPanel(\"Compare Two Models using Different Equation\",uiOutput(\"Howto8\"))\n            ),\n            tabPanel(\"Citation\",\n                     fluidPage(\n                         htmlOutput('citation'),     \n                         #HTML(markdownToHTML(fragment.only=TRUE,text=c(\"`논문 작성`시에는 다음과 같이 인용하세요.\"))),\n                         hr(),\n                         verbatimTextOutput('citation1')\n                     )\n            ),\n            tabPanel(\"About\",\n                     uiOutput(\"about\")\n                     ),\n            id='main',\n            theme=shinytheme(\"united\")\n            \n        )    \n    )\n  )              \n\n",
    "created" : 1456808575263.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "113229798",
    "id" : "EA564144",
    "lastKnownWriteTime" : 1456818142,
    "last_content_update" : 1456818142295,
    "path" : "~/ownCloud/Documents/r-sem/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}